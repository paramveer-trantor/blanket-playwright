import { test, expect } from '@playwright/test';
import { POManager } from '../PageObjects/POManager';
import { username,password,tagline, date, gender, firstname, lastname, houseaddress, phonenumber, income, saving, mortgageBal, debt, quotevalue, feet, inches, weight, marijuana, drinks, OptionYes, OptionNo } from '../Utils/TestData';

test.describe('Tests as per page', async () => {

    test.beforeEach('Base test to click Apply now button', async ({ page }) => {
        const pomanager = new POManager(page);
        const loginpage = pomanager.getLoginPage();
        await loginpage.navigateToURL();
        await loginpage.login(username, password);
        const dashboardpage = pomanager.getDashboardPage();
        await dashboardpage.acceptCookies();
        await dashboardpage.selectCACountry();
        await dashboardpage.navigateToTermLifeCA();
        const termlifeCApage = pomanager.getTermLifeCAPage();
        await termlifeCApage.getHeaderText(tagline);
        await termlifeCApage.clickApplyNowBtn();
    });

    test('Premium Quote Page', async ({ page }) => {
        const pomanager = new POManager(page);
        /*const loginpage = pomanager.getLoginPage();
        await loginpage.navigateToURL();
        await loginpage.login(username, password);
        const dashboardpage = pomanager.getDashboardPage();
        await dashboardpage.acceptCookies();
        await dashboardpage.selectCACountry();
        await dashboardpage.navigateToTermLifeCA();
        const termlifeCApage = pomanager.getTermLifeCAPage();
        await termlifeCApage.getHeaderText(tagline);
        await termlifeCApage.clickApplyNowBtn();*/
        const premiunquotepage = pomanager.getPremiumQuotePage();
        await premiunquotepage.selectGender(sex);
        await premiunquotepage.enterDOB(date);
        await premiunquotepage.selectCadianCitizen();
        await premiunquotepage.selectNonSmoker();
        await premiunquotepage.clickGetQuoteBtn();
        await premiunquotepage.clickContinueBtn();
    });

    test('Pre Application Page', async ({ page }) => {
        const pomanager = new POManager(page);
        /*const loginpage = pomanager.getLoginPage();
        await loginpage.navigateToURL();
        await loginpage.login(username, password);
        const dashboardpage = pomanager.getDashboardPage();
        await dashboardpage.acceptCookies();
        await dashboardpage.selectCACountry();
        await dashboardpage.navigateToTermLifeCA();
        const termlifeCApage = pomanager.getTermLifeCAPage();
        await termlifeCApage.getHeaderText(tagline);
        await termlifeCApage.clickApplyNowBtn();*/
        const premiunquotepage = pomanager.getPremiumQuotePage();
        await premiunquotepage.selectGender(gender);
        await premiunquotepage.enterDOB(date);
        await premiunquotepage.selectCadianCitizen();
        await premiunquotepage.selectNonSmoker();
        await premiunquotepage.clickGetQuoteBtn();
        await premiunquotepage.clickContinueBtn();
        const preapplicationpage = pomanager.getPreApplicationPage();
        // await preapplicationpage.acceptPopWindow();
        await preapplicationpage.enterFirstName(firstname);
        await preapplicationpage.enterLastName(lastname);
        await preapplicationpage.enterAddress(houseaddress);
        await preapplicationpage.enterPhoneNumber(phonenumber);
        await preapplicationpage.selectAnswerForQuestion3();
        await preapplicationpage.selectAnswerForQuestion4();
        await preapplicationpage.selectAnswerForQuestion5();
        await preapplicationpage.clickConitnueBtn();
    });

    test('Needs Assessment Page', async ({ page }) => {
        const pomanager = new POManager(page);
        /*const loginpage = pomanager.getLoginPage();
        await loginpage.navigateToURL();
        await loginpage.login(username, password);
        const dashboardpage = pomanager.getDashboardPage();
        await dashboardpage.acceptCookies();
        await dashboardpage.selectCACountry();
        await dashboardpage.navigateToTermLifeCA();
        const termlifeCApage = pomanager.getTermLifeCAPage();
        await termlifeCApage.getHeaderText(tagline);
        await termlifeCApage.clickApplyNowBtn();*/
        const premiunquotepage = pomanager.getPremiumQuotePage();
        await premiunquotepage.selectGender(gender);
        await premiunquotepage.enterDOB(date);
        await premiunquotepage.selectCadianCitizen();
        await premiunquotepage.selectNonSmoker();
        await premiunquotepage.clickGetQuoteBtn();
        await premiunquotepage.clickContinueBtn();
        const preapplicationpage = pomanager.getPreApplicationPage();
        // await preapplicationpage.acceptPopWindow();
        await preapplicationpage.enterFirstName(firstname);
        await preapplicationpage.enterLastName(lastname);
        await preapplicationpage.enterAddress(houseaddress);
        await preapplicationpage.enterPhoneNumber(phonenumber);
        await preapplicationpage.selectAnswerForQuestion3();
        await preapplicationpage.selectAnswerForQuestion4();
        await preapplicationpage.selectAnswerForQuestion5();
        await preapplicationpage.clickConitnueBtn();
        const needsassessmentpage = pomanager.getNeedsAssessmentPage();
        await needsassessmentpage.enterGrossIncome(income,saving,mortgageBal,debt);
        await needsassessmentpage.clickContinueBtn();
    });

    test('Confirm Premium Page', async ({ page }) => {
        const pomanager = new POManager(page);
        /*const loginpage = pomanager.getLoginPage();
        await loginpage.navigateToURL();
        await loginpage.login(username, password);
        const dashboardpage = pomanager.getDashboardPage();
        await dashboardpage.acceptCookies();
        await dashboardpage.selectCACountry();
        await dashboardpage.navigateToTermLifeCA();
        const termlifeCApage = pomanager.getTermLifeCAPage();
        await termlifeCApage.getHeaderText(tagline);
        await termlifeCApage.clickApplyNowBtn();*/
        const premiunquotepage = pomanager.getPremiumQuotePage();
        await premiunquotepage.selectGender(gender);
        await premiunquotepage.enterDOB(date);
        await premiunquotepage.selectCadianCitizen();
        await premiunquotepage.selectNonSmoker();
        await premiunquotepage.clickGetQuoteBtn();
        await premiunquotepage.clickContinueBtn();
        const preapplicationpage = pomanager.getPreApplicationPage();
        // await preapplicationpage.acceptPopWindow();
        await preapplicationpage.enterFirstName(firstname);
        await preapplicationpage.enterLastName(lastname);
        await preapplicationpage.enterAddress(houseaddress);
        await preapplicationpage.enterPhoneNumber(phonenumber);
        await preapplicationpage.selectAnswerForQuestion3();
        await preapplicationpage.selectAnswerForQuestion4();
        await preapplicationpage.selectAnswerForQuestion5();
        await preapplicationpage.clickConitnueBtn();
        const needsassessmentpage = pomanager.getNeedsAssessmentPage();
        await needsassessmentpage.enterGrossIncome(income,saving,mortgageBal,debt);
        await needsassessmentpage.clickContinueBtn();
        const confirmpremiumpage = pomanager.getConfirmPremiumPage();
        //expect(await confirmpremiumpage.comfirmQuoteValue()).toContain(quotevalue);
        await confirmpremiumpage.clickContinueBtn();
    });

    test('Lifestyle Questionnaire Page', async ({ page }) => {
        const pomanager = new POManager(page);
        /*const loginpage = pomanager.getLoginPage();
        await loginpage.navigateToURL();
        await loginpage.login(username, password);
        const dashboardpage = pomanager.getDashboardPage();
        await dashboardpage.acceptCookies();
        await dashboardpage.selectCACountry();
        await dashboardpage.navigateToTermLifeCA();
        const termlifeCApage = pomanager.getTermLifeCAPage();
        await termlifeCApage.getHeaderText(tagline);
        await termlifeCApage.clickApplyNowBtn();*/
        const premiunquotepage = pomanager.getPremiumQuotePage();
        await premiunquotepage.selectGender(gender);
        await premiunquotepage.enterDOB(date);
        await premiunquotepage.selectCadianCitizen();
        await premiunquotepage.selectNonSmoker();
        await premiunquotepage.clickGetQuoteBtn();
        await premiunquotepage.clickContinueBtn();
        const preapplicationpage = pomanager.getPreApplicationPage();
        // await preapplicationpage.acceptPopWindow();
        await preapplicationpage.enterFirstName(firstname);
        await preapplicationpage.enterLastName(lastname);
        await preapplicationpage.enterAddress(houseaddress);
        await preapplicationpage.enterPhoneNumber(phonenumber);
        await preapplicationpage.selectAnswerForQuestion3();
        await preapplicationpage.selectAnswerForQuestion4();
        await preapplicationpage.selectAnswerForQuestion5();
        await preapplicationpage.clickConitnueBtn();
        const needsassessmentpage = pomanager.getNeedsAssessmentPage();
        await needsassessmentpage.enterGrossIncome(income,saving,mortgageBal,debt);
        await needsassessmentpage.clickContinueBtn();
        //const confirmpremiumpage = pomanager.getConfirmPremiumPage();
        expect(await confirmpremiumpage.comfirmQuoteValue()).toContain(quotevalue);
        await confirmpremiumpage.clickContinueBtn();
        const lifestylequestionnairepage = pomanager.getLifestyleQuestionnairePage();
        await lifestylequestionnairepage.enterHeight(feet, inches, weight);
        await lifestylequestionnairepage.selectAnswerForQuestion1();
        await lifestylequestionnairepage.selectAnswerForQuestion2();
        await lifestylequestionnairepage.selectAnswerForQuestion3();
        await lifestylequestionnairepage.selectAnswerForQuestion4();
        await lifestylequestionnairepage.selectAnswerForQuestion5();
        await lifestylequestionnairepage.enterDrinksValue(drinks);
        await lifestylequestionnairepage.selectAnswerForQuestion6();
        await lifestylequestionnairepage.selectAnswerForQuestion7();
        await lifestylequestionnairepage.selectAnswerForQuestion8();
        await lifestylequestionnairepage.clickContinueBtn();
    });

    test('Medical Questionnaire Pages', async ({ page }) => {
        const pomanager = new POManager(page);
        /*const loginpage = pomanager.getLoginPage();
        await loginpage.navigateToURL();
        await loginpage.login(username, password);
        const dashboardpage = pomanager.getDashboardPage();
        await dashboardpage.acceptCookies();
        await dashboardpage.selectCACountry();
        await dashboardpage.navigateToTermLifeCA();
        const termlifeCApage = pomanager.getTermLifeCAPage();
        await termlifeCApage.getHeaderText(tagline);
        await termlifeCApage.clickApplyNowBtn();*/
        const premiunquotepage = pomanager.getPremiumQuotePage();
        await premiunquotepage.selectGender(gender);
        await premiunquotepage.enterDOB(date);
        await premiunquotepage.selectCadianCitizen();
        await premiunquotepage.selectNonSmoker();
        await premiunquotepage.clickGetQuoteBtn();
        await premiunquotepage.clickContinueBtn();
        const preapplicationpage = pomanager.getPreApplicationPage();
        // await preapplicationpage.acceptPopWindow();
        await preapplicationpage.enterFirstName(firstname);
        await preapplicationpage.enterLastName(lastname);
        await preapplicationpage.enterAddress(houseaddress);
        await preapplicationpage.enterPhoneNumber(phonenumber);
        await preapplicationpage.selectAnswerForQuestion3();
        await preapplicationpage.selectAnswerForQuestion4();
        await preapplicationpage.selectAnswerForQuestion5();
        await preapplicationpage.clickConitnueBtn();
        const needsassessmentpage = pomanager.getNeedsAssessmentPage();
        await needsassessmentpage.enterGrossIncome(income,saving,mortgageBal,debt);
        await needsassessmentpage.clickContinueBtn();
        const confirmpremiumpage = pomanager.getConfirmPremiumPage();
        //expect(await confirmpremiumpage.comfirmQuoteValue()).toContain(quotevalue);
        await confirmpremiumpage.clickContinueBtn();
        const lifestylequestionnairepage = pomanager.getLifestyleQuestionnairePage();
        await lifestylequestionnairepage.enterHeight(feet, inches, weight);
        await lifestylequestionnairepage.selectAnswerForQuestion1();
        await lifestylequestionnairepage.selectAnswerForQuestion2();
        await lifestylequestionnairepage.selectAnswerForQuestion3();
        await lifestylequestionnairepage.selectAnswerForQuestion4();
        await lifestylequestionnairepage.selectAnswerForQuestion5();
        await lifestylequestionnairepage.enterDrinksValue(drinks);
        await lifestylequestionnairepage.selectAnswerForQuestion6();
        await lifestylequestionnairepage.selectAnswerForQuestion7();
        await lifestylequestionnairepage.selectAnswerForQuestion8();
        await lifestylequestionnairepage.clickContinueBtn();
        const medicalquestionnaire1page = pomanager.getMedicalQuestionnaire1Page();
        await medicalquestionnaire1page.selectAnswerForQuestion1();
        await medicalquestionnaire1page.selectAnswerForQuestion2();
        await medicalquestionnaire1page.selectAnswerForQuestion3();
        await medicalquestionnaire1page.selectAnswerForQuestion4();
        await medicalquestionnaire1page.selectAnswerForQuestion5();
        await medicalquestionnaire1page.selectAnswerForQuestion6();
        await medicalquestionnaire1page.selectAnswerForQuestion7();
        await medicalquestionnaire1page.selectAnswerForQuestion8();
        await medicalquestionnaire1page.selectAnswerForQuestion9();
        await medicalquestionnaire1page.selectAnswerForQuestion10();
        await medicalquestionnaire1page.selectAnswerForQuestion11();
        await medicalquestionnaire1page.clickConitnueBtn();
        const medicalquestionnaire2page = pomanager.getMedicalQuestionnaire2Page();
        await medicalquestionnaire2page.selectAnswerForQuestion1();
        await medicalquestionnaire2page.selectAnswerForQuestion2();
        await medicalquestionnaire2page.selectAnswerForQuestion3();
        await medicalquestionnaire2page.selectAnswerForQuestion4();
        await medicalquestionnaire2page.selectAnswerForQuestion5();
        await medicalquestionnaire2page.selectAnswerForQuestion6();
        await medicalquestionnaire2page.selectAnswerForQuestion7();
        await medicalquestionnaire2page.clickConitnueBtn(); 
    });

    test('Review Your Answers Page', async ({ page }) => {
        const pomanager = new POManager(page);
        /*const loginpage = pomanager.getLoginPage();
        await loginpage.navigateToURL();
        await loginpage.login(username, password);
        const dashboardpage = pomanager.getDashboardPage();
        await dashboardpage.acceptCookies();
        await dashboardpage.selectCACountry();
        await dashboardpage.navigateToTermLifeCA();
        const termlifeCApage = pomanager.getTermLifeCAPage();
        await termlifeCApage.getHeaderText(tagline);
        await termlifeCApage.clickApplyNowBtn();*/
        const premiunquotepage = pomanager.getPremiumQuotePage();
        await premiunquotepage.selectGender(gender);
        await premiunquotepage.enterDOB(date);
        await premiunquotepage.selectCadianCitizen();
        await premiunquotepage.selectNonSmoker();
        await premiunquotepage.clickGetQuoteBtn();
        await premiunquotepage.clickContinueBtn();
        const preapplicationpage = pomanager.getPreApplicationPage();
        // await preapplicationpage.acceptPopWindow();
        await preapplicationpage.enterFirstName(firstname);
        await preapplicationpage.enterLastName(lastname);
        await preapplicationpage.enterAddress(houseaddress);
        await preapplicationpage.enterPhoneNumber(phonenumber);
        await preapplicationpage.selectAnswerForQuestion3();
        await preapplicationpage.selectAnswerForQuestion4();
        await preapplicationpage.selectAnswerForQuestion5();
        await preapplicationpage.clickConitnueBtn();
        const needsassessmentpage = pomanager.getNeedsAssessmentPage();
        await needsassessmentpage.enterGrossIncome(income,saving,mortgageBal,debt);
        await needsassessmentpage.clickContinueBtn();
        const confirmpremiumpage = pomanager.getConfirmPremiumPage();
        //expect(await confirmpremiumpage.comfirmQuoteValue()).toContain(quotevalue);
        await confirmpremiumpage.clickContinueBtn();
        const lifestylequestionnairepage = pomanager.getLifestyleQuestionnairePage();
        await lifestylequestionnairepage.enterHeight(feet, inches, weight);
        await lifestylequestionnairepage.selectAnswerForQuestion1();
        await lifestylequestionnairepage.selectAnswerForQuestion2();
        await lifestylequestionnairepage.selectAnswerForQuestion3();
        await lifestylequestionnairepage.selectAnswerForQuestion4();
        await lifestylequestionnairepage.selectAnswerForQuestion5();
        await lifestylequestionnairepage.enterDrinksValue(drinks);
        await lifestylequestionnairepage.selectAnswerForQuestion6();
        await lifestylequestionnairepage.selectAnswerForQuestion7();
        await lifestylequestionnairepage.selectAnswerForQuestion8();
        await lifestylequestionnairepage.clickContinueBtn();
        const medicalquestionnaire1page = pomanager.getMedicalQuestionnaire1Page();
        await medicalquestionnaire1page.selectAnswerForQuestion1();
        await medicalquestionnaire1page.selectAnswerForQuestion2();
        await medicalquestionnaire1page.selectAnswerForQuestion3();
        await medicalquestionnaire1page.selectAnswerForQuestion4();
        await medicalquestionnaire1page.selectAnswerForQuestion5();
        await medicalquestionnaire1page.selectAnswerForQuestion6();
        await medicalquestionnaire1page.selectAnswerForQuestion7();
        await medicalquestionnaire1page.selectAnswerForQuestion8();
        await medicalquestionnaire1page.selectAnswerForQuestion9();
        await medicalquestionnaire1page.selectAnswerForQuestion10();
        await medicalquestionnaire1page.selectAnswerForQuestion11();
        await medicalquestionnaire1page.clickConitnueBtn();
        const medicalquestionnaire2page = pomanager.getMedicalQuestionnaire2Page();
        await medicalquestionnaire2page.selectAnswerForQuestion1();
        await medicalquestionnaire2page.selectAnswerForQuestion2();
        await medicalquestionnaire2page.selectAnswerForQuestion3();
        await medicalquestionnaire2page.selectAnswerForQuestion4();
        await medicalquestionnaire2page.selectAnswerForQuestion5();
        await medicalquestionnaire2page.selectAnswerForQuestion6();
        await medicalquestionnaire2page.selectAnswerForQuestion7();
        await medicalquestionnaire2page.clickConitnueBtn(); 
        const reviewyouranswerspage = pomanager.getReviewYourAnswersPage();
        reviewyouranswerspage.clickConitnueBtn();
    });

    test.only('Persnal Statement Page', async ({ page }) => {
        const pomanager = new POManager(page); /*
        const loginpage = pomanager.getLoginPage();
        await loginpage.navigateToURL();
        await loginpage.login(username, password);
        const dashboardpage = pomanager.getDashboardPage();
        await dashboardpage.acceptCookies();
        await dashboardpage.selectCACountry();
        await dashboardpage.navigateToTermLifeCA();
        const termlifeCApage = pomanager.getTermLifeCAPage();
        await termlifeCApage.getHeaderText(tagline);
        await termlifeCApage.clickApplyNowBtn(); */
        const premiunquotepage = pomanager.getPremiumQuotePage();
        await premiunquotepage.selectGender(gender);
        await premiunquotepage.enterDOB(date);
        await premiunquotepage.selectCadianCitizen();
        await premiunquotepage.selectNonSmoker();
        await premiunquotepage.clickGetQuoteBtn();
        await premiunquotepage.clickContinueBtn();
        const preapplicationpage = pomanager.getPreApplicationPage();
        // await preapplicationpage.acceptPopWindow();
        await preapplicationpage.enterFirstName(firstname);
        await preapplicationpage.enterLastName(lastname);
        await preapplicationpage.enterAddress(houseaddress);
        await preapplicationpage.enterPhoneNumber(phonenumber);
        await preapplicationpage.selectAnswerForQuestion3();
        await preapplicationpage.selectAnswerForQuestion4();
        await preapplicationpage.selectAnswerForQuestion5();
        await preapplicationpage.clickConitnueBtn();
        const needsassessmentpage = pomanager.getNeedsAssessmentPage();
        await needsassessmentpage.enterGrossIncome(income,saving,mortgageBal,debt);
        await needsassessmentpage.clickContinueBtn();
        await page.waitForTimeout(2000);
        const confirmpremiumpage = pomanager.getConfirmPremiumPage();
        await confirmpremiumpage.clickContinueBtn();
       
        const lifestylequestionnairepage = pomanager.getLifestyleQuestionnairePage();
        await page.waitForTimeout(2000);
        await lifestylequestionnairepage.enterHeight(feet, inches, weight);
        await lifestylequestionnairepage.questionCompanyDecline();
        //await lifestylequestionnairepage.questionRiskOccupation(OptionNo);
        // await lifestylequestionnairepage.questionCriminalCase(OptionNo);
        // await lifestylequestionnairepage.questionExtremeSports(OptionNo);
        // await lifestylequestionnairepage.questionMarijuanaUse(OptionNo);
        // await lifestylequestionnairepage.enterDrinksValue(drinks);
        // await lifestylequestionnairepage.questionDrugsUse5Y(OptionNo);
        // await lifestylequestionnairepage.questionDrugsUse10Y(OptionNo);
        // await lifestylequestionnairepage.questionOutsideCA(OptionNo);
        // await lifestylequestionnairepage.clickContinueBtn(OptionNo);
        // const medicalquestionnaire1page = pomanager.getMedicalQuestionnaire1Page();
        // await medicalquestionnaire1page.questionCancer(OptionNo);
        // await medicalquestionnaire1page.questionHeartAttack(OptionNo);
        // await medicalquestionnaire1page.questionFibrosis(OptionNo);
        // await medicalquestionnaire1page.questionSleepApnea(OptionYes);
        // await medicalquestionnaire1page.questionSleepApneaAdditional(OptionYes);
        // await medicalquestionnaire1page.questionAIDSHIV(OptionNo);
        // await medicalquestionnaire1page.questionBrainDisorder(OptionNo);
        // await medicalquestionnaire1page.questionMemoryDisorder(OptionNo);
        // await medicalquestionnaire1page.questionRheumatoidArthritis(OptionNo);
        // await medicalquestionnaire1page.questionSchizophrenia(OptionNo);
        // await medicalquestionnaire1page.questionDepression(OptionNo);
        // await medicalquestionnaire1page.questionAnxiety(OptionNo);
        // await medicalquestionnaire1page.clickConitnueBtn(OptionNo);
        // const medicalquestionnaire2page = pomanager.getMedicalQuestionnaire2Page();
        // await medicalquestionnaire2page.questionHepatitis(OptionNo);
        // await medicalquestionnaire2page.questionMedicalCondition4W(OptionNo);
        // await medicalquestionnaire2page.questionMamogram(OptionNo);
        // await medicalquestionnaire2page.questionMedicalFollowups(OptionNo);
        // await medicalquestionnaire2page.questionLast3MonthSymptoms(OptionNo);
        // await medicalquestionnaire2page.questionLast2ParentsDiagnosed(OptionNo);
        // await medicalquestionnaire2page.questionLast1ParentsDiagnosed(OptionNo);
        // await medicalquestionnaire2page.clickConitnueBtn(); 
        // const reviewyouranswerspage = pomanager.getReviewYourAnswersPage();
        // await reviewyouranswerspage.clickConitnueBtn();
        // const personalstatementpage = pomanager.getPersonalStatementPage();
        // await personalstatementpage.clickCheckboxes();
        // await personalstatementpage.clickAgreeBtn();

        
    });


    

});


